# Use the latest stable version of Semaphore 2.0 YML syntax:
version: v1.0

# Name of your pipeline. In this example we connect two pipelines with
# a promotion, so it helps to differentiate what's the job of each.
name: Semaphore Scala with Play example

# An agent defines the environment in which your code runs.
# It is a combination of one of available machine types and operating
# system images. See:
# https://docs.semaphoreci.com/article/20-machine-types
# https://docs.semaphoreci.com/article/32-ubuntu-1804-image
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

# Blocks are the heart of a pipeline and are executed sequentially.
# Each block has a task that defines one or more jobs. Jobs define the
# commands to execute.
# See https://docs.semaphoreci.com/article/62-concepts
blocks:

  - name: "Build"
    task:
      # Set environment variables that your project requires.
      # See https://docs.semaphoreci.com/article/66-environment-variables-and-secrets
      #env_vars:
      
      jobs:
      - name: Build
        commands:
          # Checkout code from Git repository. This step is mandatory if the
          # job is to work with your code.
          - checkout
          - sem-version scala 2.12
          # Cache restore
          - cache restore sbt-$SEMAPHORE_GIT_BRANCH
          - cache restore gradle-$SEMAPHORE_GIT_BRANCH
          # Cache store
          - cache store sbt-$SEMAPHORE_GIT_BRANCH $HOME/.sbt
          - cache store gradle-$SEMAPHORE_GIT_BRANCH $HOME/.gradle/caches
          # Running tests
          - scripts/test-sbt
          - scripts/test-gradle
         
